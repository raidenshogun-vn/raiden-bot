// events/dm/messageListener.js
const { Events, ChannelType } = require('discord.js');
const { generateResponse } = require('../../config/aiConfig');
const {getLang} = require('../../helpers/getLang');
const getPromptForUser = require('../../helpers/dm/getPromptForUser');
const getChatContext = require('../../helpers/dm/getChatContext');
const saveChatHistory = require('../../helpers/dm/saveChatHistory');
const { displayName } = require('../../config/character');
const { isSpamming } = require('../../helpers/dm/antiSpam');
const sendSafeReply = require('../../utils/sendSafeReply');
const User = require('../../models/User');
const UserNotice = require('../../models/UserNotice');
const enhancePromptWithContext = require('../../helpers/enhancePromptWithContext');

module.exports = {
  name: Events.MessageCreate,
  async execute(message) {
    if (message.author.bot || message.channel.type !== ChannelType.DM) return;

    const userId = message.author.id;
    const username = message.author.username;

    // üõ°Ô∏è Ch·ªëng spam
    if (await isSpamming(message)) {
      return message.reply('üö´ You can only send up to 10 messages per minute. Take a short break and relax~');
    }

    // üì¶ T·∫°o user n·∫øu ch∆∞a c√≥
    let user = await User.findOne({ userId });
    if (!user) {
      user = new User({ userId });
      await user.save();
      console.log(`üì¶ T·∫°o m·ªõi ng∆∞·ªùi d√πng: ${userId}`);
    }

    const userLanguage = user.language || 'vn';
    const lang = getLang(userLanguage);

    // üîî Th√¥ng b√°o ch·ªçn ng√¥n ng·ªØ n·∫øu l·∫ßn ƒë·∫ßu
    try {
      const alreadyNoticed = await UserNotice.findOne({
        userId,
        guildId: null,
        noticeType: 'language'
      });

      if (!alreadyNoticed) {
        const languageNotice =
          "üåê **Default language is Vietnamese (Ti·∫øng Vi·ªát).**\n" +
          "If it doesn't suit you, use the command `/language` to switch to English or other languages.";
        await message.reply(languageNotice);
        await new UserNotice({ userId, guildId: null, noticeType: 'language' }).save();
      }
    } catch (e) {
      console.error('‚ùå L·ªói g·ª≠i notice:', e);
    }

    // üí¨ X·ª≠ l√Ω ph·∫£n h·ªìi DM
    let responseSent = false;

    try {
      await message.channel.sendTyping().catch(() => {});

      const systemPrompt = await getPromptForUser(userId);
      const chatContext = await getChatContext(userId, 200, false);

     const enhancedPrompt = enhancePromptWithContext(systemPrompt, chatContext, message.content, userLanguage);
      const response = await generateResponse(
        message.content,
        enhancedPrompt,
        userLanguage,
        userId,
        username
      );

      console.log(`üíå ${username} ƒëang chat t·∫°i DM v·ªõi ${displayName}`);

      if (response && typeof response === 'string' && response.trim().length > 0) {
        await sendSafeReply(message, response);
        responseSent = true;

        await saveChatHistory(
          userId,
          username,
          message.content,
          response,
          userLanguage,
          false // isServer = false
        );
      } else {
        throw new Error('‚ùå AI tr·∫£ v·ªÅ response r·ªóng ho·∫∑c kh√¥ng h·ª£p l·ªá');
      }
    } catch (error) {
      console.error('‚ùå L·ªói x·ª≠ l√Ω DM:', error);
      if (!responseSent) {
        const errorMessage = lang.errors?.emptyResponse || '‚ö†Ô∏è Sorry, something went wrong. Please try again later.';
        await message.reply(errorMessage);
      }
    }
  }
};
